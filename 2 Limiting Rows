# Limiting Rows
- limiting the number of rows returned by a SELECT using WHERE cluase.
- Key Methods to Limit Rows
    Using ROWNUM (Oracle 7)
    Using FETCH FIRST n ROWS ONLY (Oracle 12c)

1. Using ROWNUM
Purpose: Restricts the number of rows returned by a query based on their position in the result set.

Syntax:
------
SELECT column1, column2, ...
FROM table_name
WHERE ROWNUM <= n;

Explanation:
-----------
ROWNUM: A pseudo-column that assigns a unique number to each row returned by a query, starting at 1.
n: The maximum number of rows to return.

Example: Retrieve Top 2 Highest Salaries
Objective: Get the top 2 employees with the highest salaries.

# employees Table
------------------------------------------------------------------------------------------
| employee_id | first_name | last_name | email                     | salary | manager_id |
|-------------|------------|-----------|---------------------------|--------|------------|
| 1           | John       | Doe       | john.doe@example.com      | 75000  | NULL       |
| 2           | Jane       | Smith     | jane.smith@example.com    | 50000  | 1          |
| 3           | Alice      | Johnson   | alice.johnson@example.com | 70000  | 1          |
| 4           | Tom        | Brown     | tom.brown@example.com     | 60000  | 1          |
| 5           | Emily      | Davis     | emily.davis@example.com   | NULL   | 2          |
------------------------------------------------------------------------------------------

SELECT first_name, last_name, salary
FROM employees
WHERE ROWNUM <= 2
ORDER BY salary DESC;

# Query Result: Top 2 Salaries
------------------------------------
| first_name | last_name | salary  |
|------------|-----------|---------|
| John       | Doe       | 75000   |
| Alice      | Johnson   | 70000   |
------------------------------------

Explanation:
-----------
WHERE ROWNUM <= 2: Limits the result to the first 2 rows.
ORDER BY salary DESC: Sorts the employees by salary in descending order before applying the ROWNUM filter.

2. Using FETCH FIRST n ROWS ONLY (Oracle 12c and Later)
Purpose: Provides a more intuitive and ANSI-standard way to limit rows returned by a query.
FETCH FIRST n ROWS ONLY: Limits the result set to the first n rows after sorting.

Syntax:
-------
SELECT column1, column2, ...
FROM table_name
ORDER BY column
FETCH FIRST n ROWS ONLY;

Example: Retrieve Top 3 Hired Employees
Objective: Get the first 3 employees based on their hire dates.

# employees Table
-------------------------------------------------------------------------------------------------------
| employee_id | first_name | last_name | email                     | salary | manager_id | hire_date   |
|-------------|------------|-----------|---------------------------|--------|------------|-------------|
| 1           | John       | Doe       | john.doe@example.com      | 75000  | NULL       | 01-JAN-2023 |
| 2           | Jane       | Smith     | jane.smith@example.com    | 50000  | 1          | 02-JAN-2023 |
| 3           | Alice      | Johnson   | alice.johnson@example.com | 70000  | 1          | 03-JAN-2023 |
| 4           | Tom        | Brown     | tom.brown@example.com     | 60000  | 1          | 04-JAN-2023 |
| 5           | Emily      | Davis     | emily.davis@example.com   | NULL   | 2          | 05-JAN-2023 |
--------------------------------------------------------------------------------------------------------

SELECT first_name, last_name, hire_date
FROM employees
ORDER BY hire_date ASC
FETCH FIRST 3 ROWS ONLY;

# Query Result: First 3 Hired Employees
----------------------------------------
| first_name | last_name | hire_date   |
|------------|-----------|-------------|
| John       | Doe       | 01-JAN-2023 |
| Jane       | Smith     | 02-JAN-2023 |
| Alice      | Johnson   | 03-JAN-2023 |
----------------------------------------

Explanation:
-----------
ORDER BY hire_date ASC: Sorts employees by their hire dates in ascending order.
FETCH FIRST 3 ROWS ONLY: Retrieves only the first 3 rows from the sorted result.

